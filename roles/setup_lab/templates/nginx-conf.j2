server {
    listen 443 ssl http2;
    {% if item.Type == 'service' %}
    server_name {{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }};
    {% else %}
    server_name {{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }} *.{{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }};
    {% endif %}

    ssl_certificate /opt/letsencrypt/{{ item.Dns_Subdomain }}/{{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }}.fullchain.pem;
    ssl_certificate_key /opt/letsencrypt/{{ item.Dns_Subdomain }}/{{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }}.privkey.pem;
    ssl_dhparam /opt/letsencrypt/ssl-dhparams.pem;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Enable other security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # Set nginx ssl protocol support
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_ciphers DEFAULT;

    # Security Headers
    #add_header Content-Security-Policy "default-src 'self';";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Permissions-Policy "geolocation=(self), microphone=()";

    location / {
        proxy_pass http://{{ item.Target_IP }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}

server {
    listen 80 http2;
    {% if item.Type == 'service' %}
    server_name {{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }};
    {% else %}
    server_name {{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }} *.{{ item.Dns_Subdomain }}.{{ DOMAIN_NAME }};
    {% endif %}
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}
